define(['dart_sdk', 'packages/google_fonts/src/google_fonts_base.dart', 'packages/flutter/src/material/typography.dart', 'packages/flutter/src/painting/strut_style.dart', 'packages/flutter/src/material/colors.dart', 'packages/flutter/src/material/icon_button.dart', 'packages/flutter/src/widgets/icon_theme_data.dart', 'packages/flutter/src/painting/edge_insets.dart', 'packages/flutter/src/material/input_border.dart', 'packages/flutter/src/painting/border_radius.dart', 'packages/flutter/src/painting/borders.dart', 'packages/flutter/src/material/floating_action_button_theme.dart', 'packages/flutter/src/material/tab_indicator.dart', 'packages/flutter/src/cupertino/text_theme.dart', 'packages/shared_preferences/shared_preferences.dart', 'packages/flutx/themes/app_theme.dart', 'packages/flutx/themes/custom_theme.dart', 'packages/flutter/src/foundation/change_notifier.dart'], (function load__packages__pupl_app__AppTheme_dart(dart_sdk, packages__google_fonts__src__google_fonts_base$46dart, packages__flutter__src__material__typography$46dart, packages__flutter__src__painting__strut_style$46dart, packages__flutter__src__material__colors$46dart, packages__flutter__src__material__icon_button$46dart, packages__flutter__src__widgets__icon_theme_data$46dart, packages__flutter__src__painting__edge_insets$46dart, packages__flutter__src__material__input_border$46dart, packages__flutter__src__painting__border_radius$46dart, packages__flutter__src__painting__borders$46dart, packages__flutter__src__material__floating_action_button_theme$46dart, packages__flutter__src__material__tab_indicator$46dart, packages__flutter__src__cupertino__text_theme$46dart, packages__shared_preferences__shared_preferences$46dart, packages__flutx__themes__app_theme$46dart, packages__flutx__themes__custom_theme$46dart, packages__flutter__src__foundation__change_notifier$46dart) {
  'use strict';
  const core = dart_sdk.core;
  const ui = dart_sdk.ui;
  const async = dart_sdk.async;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const google_fonts = packages__google_fonts__src__google_fonts_base$46dart.google_fonts;
  const text_theme = packages__flutter__src__material__typography$46dart.src__material__text_theme;
  const text_style = packages__flutter__src__painting__strut_style$46dart.src__painting__text_style;
  const colors = packages__flutter__src__material__colors$46dart.src__material__colors;
  const theme_data = packages__flutter__src__material__icon_button$46dart.src__material__theme_data;
  const app_bar_theme = packages__flutter__src__material__icon_button$46dart.src__material__app_bar_theme;
  const navigation_rail_theme = packages__flutter__src__material__icon_button$46dart.src__material__navigation_rail_theme;
  const color_scheme = packages__flutter__src__material__icon_button$46dart.src__material__color_scheme;
  const card_theme = packages__flutter__src__material__icon_button$46dart.src__material__card_theme;
  const input_decorator = packages__flutter__src__material__icon_button$46dart.src__material__input_decorator;
  const popup_menu_theme = packages__flutter__src__material__icon_button$46dart.src__material__popup_menu_theme;
  const bottom_app_bar_theme = packages__flutter__src__material__icon_button$46dart.src__material__bottom_app_bar_theme;
  const tab_bar_theme = packages__flutter__src__material__icon_button$46dart.src__material__tab_bar_theme;
  const tabs = packages__flutter__src__material__icon_button$46dart.src__material__tabs;
  const slider_theme = packages__flutter__src__material__icon_button$46dart.src__material__slider_theme;
  const icon_theme_data = packages__flutter__src__widgets__icon_theme_data$46dart.src__widgets__icon_theme_data;
  const edge_insets = packages__flutter__src__painting__edge_insets$46dart.src__painting__edge_insets;
  const input_border = packages__flutter__src__material__input_border$46dart.src__material__input_border;
  const border_radius = packages__flutter__src__painting__border_radius$46dart.src__painting__border_radius;
  const borders = packages__flutter__src__painting__borders$46dart.src__painting__borders;
  const floating_action_button_theme = packages__flutter__src__material__floating_action_button_theme$46dart.src__material__floating_action_button_theme;
  const tab_indicator = packages__flutter__src__material__tab_indicator$46dart.src__material__tab_indicator;
  const theme = packages__flutter__src__cupertino__text_theme$46dart.src__cupertino__theme;
  const shared_preferences = packages__shared_preferences__shared_preferences$46dart.shared_preferences;
  const app_theme = packages__flutx__themes__app_theme$46dart.themes__app_theme;
  const custom_theme = packages__flutx__themes__custom_theme$46dart.themes__custom_theme;
  const change_notifier = packages__flutter__src__foundation__change_notifier$46dart.src__foundation__change_notifier;
  var AppTheme = Object.create(dart.library);
  var AppThemeNotifier = Object.create(dart.library);
  dart._checkModuleNullSafetyMode(true);
  const CT = Object.create({
    _: () => (C, CT)
  });
  dart.defineLazy(CT, {
    get C0() {
      return C[0] = dart.const({
        __proto__: ui.TextDecoration.prototype,
        [TextDecoration__mask]: 0
      });
    },
    get C1() {
      return C[1] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294967295.0
      });
    },
    get C2() {
      return C[2] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4293322988.0
      });
    },
    get C3() {
      return C[3] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4292533729.0
      });
    },
    get C4() {
      return C[4] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4290954956.0
      });
    },
    get C5() {
      return C[5] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4293322239.0
      });
    },
    get C6() {
      return C[6] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294940996.0
      });
    },
    get C7() {
      return C[7] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4283796216.0
      });
    },
    get C8() {
      return C[8] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4281907076.0
      });
    },
    get C9() {
      return C[9] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4280229663.0
      });
    },
    get C10() {
      return C[10] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4291776636.0
      });
    },
    get C11() {
      return C[11] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4289177511.0
      });
    },
    get C12() {
      return C[12] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294964303.0
      });
    },
    get C13() {
      return C[13] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4285359583.0
      });
    },
    get C14() {
      return C[14] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4289014314.0
      });
    }
  }, false);
  var C = Array(15).fill(void 0);
  var I = [
    "package:pupl_app/AppTheme.dart",
    "package:pupl_app/AppThemeNotifier.dart"
  ];
  var TextDecoration__mask = dart.privateName(ui, "TextDecoration._mask");
  AppTheme.AppTheme = class AppTheme$ extends core.Object {
    static getCustomAppTheme(themeMode) {
      if (themeMode === AppTheme.AppTheme.themeLight) {
        return AppTheme.CustomAppTheme.lightCustomAppTheme;
      } else if (themeMode === AppTheme.AppTheme.themeDark) {
        return AppTheme.CustomAppTheme.darkCustomAppTheme;
      }
      return AppTheme.CustomAppTheme.darkCustomAppTheme;
    }
    static _getFontWeight(weight) {
      switch (weight) {
        case 100:
        {
          return ui.FontWeight.w100;
        }
        case 200:
        {
          return ui.FontWeight.w200;
        }
        case 300:
        {
          return ui.FontWeight.w300;
        }
        case 400:
        {
          return ui.FontWeight.w300;
        }
        case 500:
        {
          return ui.FontWeight.w400;
        }
        case 600:
        {
          return ui.FontWeight.w500;
        }
        case 700:
        {
          return ui.FontWeight.w600;
        }
        case 800:
        {
          return ui.FontWeight.w700;
        }
        case 900:
        {
          return ui.FontWeight.w900;
        }
      }
      return ui.FontWeight.w400;
    }
    static getTextStyle(textStyle, opts) {
      let fontWeight = opts && 'fontWeight' in opts ? opts.fontWeight : 500;
      let muted = opts && 'muted' in opts ? opts.muted : false;
      let xMuted = opts && 'xMuted' in opts ? opts.xMuted : false;
      let letterSpacing = opts && 'letterSpacing' in opts ? opts.letterSpacing : 0.15;
      let color = opts && 'color' in opts ? opts.color : null;
      let decoration = opts && 'decoration' in opts ? opts.decoration : C[0] || CT.C0;
      let height = opts && 'height' in opts ? opts.height : null;
      let wordSpacing = opts && 'wordSpacing' in opts ? opts.wordSpacing : 0;
      let fontSize = opts && 'fontSize' in opts ? opts.fontSize : null;
      let finalFontSize = fontSize != null ? fontSize : dart.nullCheck(textStyle).fontSize;
      let finalColor = null;
      if (color == null) {
        finalColor = xMuted ? dart.nullCheck(dart.nullCheck(textStyle).color).withAlpha(160) : muted ? dart.nullCheck(dart.nullCheck(textStyle).color).withAlpha(200) : dart.nullCheck(textStyle).color;
      } else {
        finalColor = xMuted ? color.withAlpha(160) : muted ? color.withAlpha(200) : color;
      }
      return google_fonts.GoogleFonts.ibmPlexSans({fontSize: finalFontSize, fontWeight: AppTheme.AppTheme._getFontWeight(fontWeight), letterSpacing: letterSpacing, color: finalColor, decoration: decoration, height: height, wordSpacing: wordSpacing});
    }
    static getThemeFromThemeMode(themeMode) {
      if (themeMode === AppTheme.AppTheme.themeLight) {
        return AppTheme.AppTheme.lightTheme;
      } else if (themeMode === AppTheme.AppTheme.themeDark) {
        return AppTheme.AppTheme.darkTheme;
      }
      return AppTheme.AppTheme.lightTheme;
    }
    static getNavigationThemeFromMode(themeMode) {
      let navigationBarTheme = new AppTheme.NavigationBarTheme.new();
      if (themeMode === AppTheme.AppTheme.themeLight) {
        navigationBarTheme.backgroundColor = new ui.Color.new(4293784053);
        navigationBarTheme.selectedItemColor = new ui.Color.new(4285951476);
        navigationBarTheme.unselectedItemColor = new ui.Color.new(4290954956);
        navigationBarTheme.selectedOverlayColor = new ui.Color.new(943547391);
      } else if (themeMode === AppTheme.AppTheme.themeDark) {
        navigationBarTheme.backgroundColor = new ui.Color.new(4281811018);
        navigationBarTheme.selectedItemColor = new ui.Color.new(4281811018);
        navigationBarTheme.unselectedItemColor = new ui.Color.new(4291940817);
        navigationBarTheme.selectedOverlayColor = new ui.Color.new(4294967295);
      }
      return navigationBarTheme;
    }
  };
  (AppTheme.AppTheme.__ = function() {
    ;
  }).prototype = AppTheme.AppTheme.prototype;
  dart.addTypeTests(AppTheme.AppTheme);
  dart.addTypeCaches(AppTheme.AppTheme);
  dart.setLibraryUri(AppTheme.AppTheme, I[0]);
  dart.defineLazy(AppTheme.AppTheme, {
    /*AppTheme.AppTheme.themeLight*/get themeLight() {
      return 1;
    },
    /*AppTheme.AppTheme.themeDark*/get themeDark() {
      return 2;
    },
    /*AppTheme.AppTheme.customTheme*/get customTheme() {
      return AppTheme.AppTheme.getCustomAppTheme(AppThemeNotifier.AppThemeNotifier.theme);
    },
    set customTheme(_) {},
    /*AppTheme.AppTheme.theme*/get theme() {
      return AppTheme.AppTheme.getThemeFromThemeMode(AppThemeNotifier.AppThemeNotifier.theme);
    },
    set theme(_) {},
    /*AppTheme.AppTheme.lightAppBarTextTheme*/get lightAppBarTextTheme() {
      return new text_theme.TextTheme.new({headline1: google_fonts.GoogleFonts.ibmPlexSans({textStyle: new text_style.TextStyle.new({fontSize: 102.0, color: new ui.Color.new(4290954956)})}), headline2: google_fonts.GoogleFonts.ibmPlexSans({textStyle: new text_style.TextStyle.new({fontSize: 64.0, color: new ui.Color.new(4290954956)})}), headline3: google_fonts.GoogleFonts.ibmPlexSans({textStyle: new text_style.TextStyle.new({fontSize: 51.0, color: new ui.Color.new(4290954956)})}), headline4: google_fonts.GoogleFonts.ibmPlexSans({textStyle: new text_style.TextStyle.new({fontSize: 36.0, color: new ui.Color.new(4290954956)})}), headline5: google_fonts.GoogleFonts.ibmPlexSans({textStyle: new text_style.TextStyle.new({fontSize: 25.0, color: new ui.Color.new(4290954956)})}), headline6: google_fonts.GoogleFonts.ibmPlexSans({textStyle: new text_style.TextStyle.new({fontSize: 18.0, color: new ui.Color.new(4290954956)})}), subtitle1: google_fonts.GoogleFonts.ibmPlexSans({textStyle: new text_style.TextStyle.new({fontSize: 17.0, color: new ui.Color.new(4290954956)})}), subtitle2: google_fonts.GoogleFonts.ibmPlexSans({textStyle: new text_style.TextStyle.new({fontSize: 15.0, color: new ui.Color.new(4290954956)})}), bodyText1: google_fonts.GoogleFonts.ibmPlexSans({textStyle: new text_style.TextStyle.new({fontSize: 16.0, color: new ui.Color.new(4290954956)})}), bodyText2: google_fonts.GoogleFonts.ibmPlexSans({textStyle: new text_style.TextStyle.new({fontSize: 14.0, color: new ui.Color.new(4290954956)})}), button: google_fonts.GoogleFonts.ibmPlexSans({textStyle: new text_style.TextStyle.new({fontSize: 15.0, color: new ui.Color.new(4290954956)})}), caption: google_fonts.GoogleFonts.ibmPlexSans({textStyle: new text_style.TextStyle.new({fontSize: 13.0, color: new ui.Color.new(4290954956)})}), overline: google_fonts.GoogleFonts.ibmPlexSans({textStyle: new text_style.TextStyle.new({fontSize: 11.0, color: new ui.Color.new(4290954956)})})});
    },
    /*AppTheme.AppTheme.darkAppBarTextTheme*/get darkAppBarTextTheme() {
      return new text_theme.TextTheme.new({headline1: google_fonts.GoogleFonts.ibmPlexSans({textStyle: new text_style.TextStyle.new({fontSize: 102.0, color: new ui.Color.new(4294967295)})}), headline2: google_fonts.GoogleFonts.ibmPlexSans({textStyle: new text_style.TextStyle.new({fontSize: 64.0, color: new ui.Color.new(4294967295)})}), headline3: google_fonts.GoogleFonts.ibmPlexSans({textStyle: new text_style.TextStyle.new({fontSize: 51.0, color: new ui.Color.new(4294967295)})}), headline4: google_fonts.GoogleFonts.ibmPlexSans({textStyle: new text_style.TextStyle.new({fontSize: 36.0, color: new ui.Color.new(4294967295)})}), headline5: google_fonts.GoogleFonts.ibmPlexSans({textStyle: new text_style.TextStyle.new({fontSize: 25.0, color: new ui.Color.new(4294967295)})}), headline6: google_fonts.GoogleFonts.ibmPlexSans({textStyle: new text_style.TextStyle.new({fontSize: 20.0, color: new ui.Color.new(4294967295)})}), subtitle1: google_fonts.GoogleFonts.ibmPlexSans({textStyle: new text_style.TextStyle.new({fontSize: 17.0, color: new ui.Color.new(4294967295)})}), subtitle2: google_fonts.GoogleFonts.ibmPlexSans({textStyle: new text_style.TextStyle.new({fontSize: 15.0, color: new ui.Color.new(4294967295)})}), bodyText1: google_fonts.GoogleFonts.ibmPlexSans({textStyle: new text_style.TextStyle.new({fontSize: 16.0, color: new ui.Color.new(4294967295)})}), bodyText2: google_fonts.GoogleFonts.ibmPlexSans({textStyle: new text_style.TextStyle.new({fontSize: 14.0, color: new ui.Color.new(4294967295)})}), button: google_fonts.GoogleFonts.ibmPlexSans({textStyle: new text_style.TextStyle.new({fontSize: 15.0, color: new ui.Color.new(4294967295)})}), caption: google_fonts.GoogleFonts.ibmPlexSans({textStyle: new text_style.TextStyle.new({fontSize: 13.0, color: new ui.Color.new(4294967295)})}), overline: google_fonts.GoogleFonts.ibmPlexSans({textStyle: new text_style.TextStyle.new({fontSize: 11.0, color: new ui.Color.new(4294967295)})})});
    },
    /*AppTheme.AppTheme.lightTextTheme*/get lightTextTheme() {
      return new text_theme.TextTheme.new({headline1: google_fonts.GoogleFonts.ibmPlexSans({textStyle: new text_style.TextStyle.new({fontSize: 102.0, color: new ui.Color.new(4278192158)})}), headline2: google_fonts.GoogleFonts.ibmPlexSans({textStyle: new text_style.TextStyle.new({fontSize: 64.0, color: new ui.Color.new(4278192158)})}), headline3: google_fonts.GoogleFonts.ibmPlexSans({textStyle: new text_style.TextStyle.new({fontSize: 51.0, color: new ui.Color.new(4278192158)})}), headline4: google_fonts.GoogleFonts.ibmPlexSans({textStyle: new text_style.TextStyle.new({fontSize: 36.0, color: new ui.Color.new(4278192158)})}), headline5: google_fonts.GoogleFonts.ibmPlexSans({textStyle: new text_style.TextStyle.new({fontSize: 25.0, color: new ui.Color.new(4278192158)})}), headline6: google_fonts.GoogleFonts.ibmPlexSans({textStyle: new text_style.TextStyle.new({fontSize: 18.0, color: new ui.Color.new(4278850350)})}), subtitle1: google_fonts.GoogleFonts.ibmPlexSans({textStyle: new text_style.TextStyle.new({fontSize: 17.0, color: new ui.Color.new(4284902264)})}), subtitle2: google_fonts.GoogleFonts.ibmPlexSans({textStyle: new text_style.TextStyle.new({fontSize: 15.0, color: new ui.Color.new(4284902264)})}), bodyText1: google_fonts.GoogleFonts.ibmPlexSans({textStyle: new text_style.TextStyle.new({fontSize: 16.0, color: new ui.Color.new(4278192158)})}), bodyText2: google_fonts.GoogleFonts.ibmPlexSans({textStyle: new text_style.TextStyle.new({fontSize: 14.0, color: new ui.Color.new(4278192158)})}), button: google_fonts.GoogleFonts.ibmPlexSans({textStyle: new text_style.TextStyle.new({fontSize: 15.0, color: new ui.Color.new(4278192158)})}), caption: google_fonts.GoogleFonts.ibmPlexSans({textStyle: new text_style.TextStyle.new({fontSize: 13.0, color: new ui.Color.new(4284902264)})}), overline: google_fonts.GoogleFonts.ibmPlexSans({textStyle: new text_style.TextStyle.new({fontSize: 11.0, color: new ui.Color.new(4278192158)})})});
    },
    /*AppTheme.AppTheme.darkTextTheme*/get darkTextTheme() {
      return new text_theme.TextTheme.new({headline1: google_fonts.GoogleFonts.ibmPlexSans({textStyle: new text_style.TextStyle.new({fontSize: 102.0, color: colors.Colors.white})}), headline2: google_fonts.GoogleFonts.ibmPlexSans({textStyle: new text_style.TextStyle.new({fontSize: 64.0, color: colors.Colors.white})}), headline3: google_fonts.GoogleFonts.ibmPlexSans({textStyle: new text_style.TextStyle.new({fontSize: 51.0, color: colors.Colors.white})}), headline4: google_fonts.GoogleFonts.ibmPlexSans({textStyle: new text_style.TextStyle.new({fontSize: 36.0, color: colors.Colors.white})}), headline5: google_fonts.GoogleFonts.ibmPlexSans({textStyle: new text_style.TextStyle.new({fontSize: 25.0, color: colors.Colors.white})}), headline6: google_fonts.GoogleFonts.ibmPlexSans({textStyle: new text_style.TextStyle.new({fontSize: 18.0, color: colors.Colors.white})}), subtitle1: google_fonts.GoogleFonts.ibmPlexSans({textStyle: new text_style.TextStyle.new({fontSize: 17.0, color: colors.Colors.white})}), subtitle2: google_fonts.GoogleFonts.ibmPlexSans({textStyle: new text_style.TextStyle.new({fontSize: 15.0, color: colors.Colors.white})}), bodyText1: google_fonts.GoogleFonts.ibmPlexSans({textStyle: new text_style.TextStyle.new({fontSize: 16.0, color: colors.Colors.white})}), bodyText2: google_fonts.GoogleFonts.ibmPlexSans({textStyle: new text_style.TextStyle.new({fontSize: 14.0, color: colors.Colors.white})}), button: google_fonts.GoogleFonts.ibmPlexSans({textStyle: new text_style.TextStyle.new({fontSize: 15.0, color: colors.Colors.white})}), caption: google_fonts.GoogleFonts.ibmPlexSans({textStyle: new text_style.TextStyle.new({fontSize: 13.0, color: colors.Colors.white})}), overline: google_fonts.GoogleFonts.ibmPlexSans({textStyle: new text_style.TextStyle.new({fontSize: 11.0, color: colors.Colors.white})})});
    },
    /*AppTheme.AppTheme.lightTheme*/get lightTheme() {
      return theme_data.ThemeData.new({brightness: ui.Brightness.light, primaryColor: new ui.Color.new(4285951476), canvasColor: colors.Colors.transparent, backgroundColor: new ui.Color.new(4293784053), scaffoldBackgroundColor: new ui.Color.new(4293784053), appBarTheme: new app_bar_theme.AppBarTheme.new({textTheme: AppTheme.AppTheme.lightAppBarTextTheme, actionsIconTheme: new icon_theme_data.IconThemeData.new({color: new ui.Color.new(4290954956)}), color: new ui.Color.new(4294967295), iconTheme: new icon_theme_data.IconThemeData.new({color: new ui.Color.new(4290954956), size: 24.0})}), navigationRailTheme: new navigation_rail_theme.NavigationRailThemeData.new({selectedIconTheme: new icon_theme_data.IconThemeData.new({color: new ui.Color.new(4285951476), opacity: 1.0, size: 24.0}), unselectedIconTheme: new icon_theme_data.IconThemeData.new({color: new ui.Color.new(4290954956), opacity: 1.0, size: 24.0}), backgroundColor: new ui.Color.new(4293784053), elevation: 3.0, selectedLabelTextStyle: new text_style.TextStyle.new({color: new ui.Color.new(4285951476)}), unselectedLabelTextStyle: new text_style.TextStyle.new({color: new ui.Color.new(4290954956)})}), colorScheme: new color_scheme.ColorScheme.light({primary: new ui.Color.new(4285951476), onPrimary: colors.Colors.white, primaryVariant: new ui.Color.new(4283796216), secondary: new ui.Color.new(4290954956), secondaryVariant: new ui.Color.new(4281907076), onSecondary: colors.Colors.white, surface: new ui.Color.new(4293060593), background: new ui.Color.new(4293784053), onBackground: new ui.Color.new(4290954956)}), cardTheme: new card_theme.CardTheme.new({color: colors.Colors.white, shadowColor: colors.Colors.black.withOpacity(0.4), elevation: 1.0, margin: new edge_insets.EdgeInsets.all(0.0)}), inputDecorationTheme: new input_decorator.InputDecorationTheme.new({hintStyle: new text_style.TextStyle.new({fontSize: 15.0, color: new ui.Color.new(2864891596)}), focusedBorder: new input_border.OutlineInputBorder.new({borderRadius: new border_radius.BorderRadius.all(new ui.Radius.circular(4.0)), borderSide: new borders.BorderSide.new({width: 1.0, color: new ui.Color.new(4285951476)})}), enabledBorder: new input_border.OutlineInputBorder.new({borderRadius: new border_radius.BorderRadius.all(new ui.Radius.circular(4.0)), borderSide: new borders.BorderSide.new({width: 1.0, color: new ui.Color.new(4290954956)})}), border: new input_border.OutlineInputBorder.new({borderRadius: new border_radius.BorderRadius.all(new ui.Radius.circular(4.0)), borderSide: new borders.BorderSide.new({width: 1.0, color: new ui.Color.new(4290954956)})})}), splashColor: colors.Colors.white.withAlpha(100), iconTheme: new icon_theme_data.IconThemeData.new({color: colors.Colors.white}), textTheme: AppTheme.AppTheme.lightTextTheme, indicatorColor: colors.Colors.white, disabledColor: new ui.Color.new(4293322239), highlightColor: colors.Colors.white, floatingActionButtonTheme: new floating_action_button_theme.FloatingActionButtonThemeData.new({backgroundColor: new ui.Color.new(4285951476), splashColor: colors.Colors.white.withAlpha(100), highlightElevation: 8.0, elevation: 4.0, focusColor: new ui.Color.new(4285951476), hoverColor: new ui.Color.new(4285951476), foregroundColor: colors.Colors.white}), dividerColor: new ui.Color.new(4291940817), errorColor: new ui.Color.new(4291776636), cardColor: colors.Colors.white, accentColor: new ui.Color.new(4285951476), popupMenuTheme: new popup_menu_theme.PopupMenuThemeData.new({color: new ui.Color.new(4294967295), textStyle: dart.nullCheck(AppTheme.AppTheme.lightTextTheme.bodyText2).merge(new text_style.TextStyle.new({color: new ui.Color.new(4290954956)}))}), bottomAppBarTheme: new bottom_app_bar_theme.BottomAppBarTheme.new({color: new ui.Color.new(4294967295), elevation: 2.0}), tabBarTheme: new tab_bar_theme.TabBarTheme.new({unselectedLabelColor: new ui.Color.new(4290954956), labelColor: new ui.Color.new(4285951476), indicatorSize: tabs.TabBarIndicatorSize.label, indicator: new tab_indicator.UnderlineTabIndicator.new({borderSide: new borders.BorderSide.new({color: new ui.Color.new(4285951476), width: 2.0})})}), sliderTheme: new slider_theme.SliderThemeData.new({activeTrackColor: new ui.Color.new(4285951476), inactiveTrackColor: new ui.Color.new(4285951476).withAlpha(140), trackShape: new slider_theme.RoundedRectSliderTrackShape.new(), trackHeight: 4.0, thumbColor: new ui.Color.new(4285951476), thumbShape: new slider_theme.RoundSliderThumbShape.new({enabledThumbRadius: 10.0}), overlayShape: new slider_theme.RoundSliderOverlayShape.new({overlayRadius: 24.0}), tickMarkShape: new slider_theme.RoundSliderTickMarkShape.new(), inactiveTickMarkColor: new ui.Color.new(4294105059), valueIndicatorShape: new slider_theme.PaddleSliderValueIndicatorShape.new(), valueIndicatorTextStyle: new text_style.TextStyle.new({color: colors.Colors.white})})});
    },
    /*AppTheme.AppTheme.darkTheme*/get darkTheme() {
      return theme_data.ThemeData.new({brightness: ui.Brightness.dark, canvasColor: colors.Colors.transparent, primaryColor: new ui.Color.new(4285951476), scaffoldBackgroundColor: new ui.Color.new(4284902264), backgroundColor: new ui.Color.new(4284902264), appBarTheme: new app_bar_theme.AppBarTheme.new({textTheme: AppTheme.AppTheme.darkAppBarTextTheme, actionsIconTheme: new icon_theme_data.IconThemeData.new({color: new ui.Color.new(4294967295)}), color: new ui.Color.new(4281218107), iconTheme: new icon_theme_data.IconThemeData.new({color: new ui.Color.new(4294967295), size: 24.0})}), colorScheme: new color_scheme.ColorScheme.dark({primary: new ui.Color.new(4285951476), primaryVariant: new ui.Color.new(4285951476), secondary: new ui.Color.new(4278242423), secondaryVariant: new ui.Color.new(4278242423), background: new ui.Color.new(4281612864), onPrimary: colors.Colors.white, onBackground: colors.Colors.white, onSecondary: colors.Colors.white, surface: new ui.Color.new(4283981411)}), cardTheme: new card_theme.CardTheme.new({color: new ui.Color.new(4281811018), shadowColor: new ui.Color.new(4278190080), elevation: 1.0, margin: new edge_insets.EdgeInsets.all(0.0)}), iconTheme: new icon_theme_data.IconThemeData.new({color: colors.Colors.white}), textTheme: AppTheme.AppTheme.darkTextTheme, indicatorColor: colors.Colors.white, disabledColor: new ui.Color.new(4288914339), highlightColor: colors.Colors.white, inputDecorationTheme: new input_decorator.InputDecorationTheme.new({focusedBorder: new input_border.OutlineInputBorder.new({borderRadius: new border_radius.BorderRadius.all(new ui.Radius.circular(4.0)), borderSide: new borders.BorderSide.new({width: 1.0, color: new ui.Color.new(4285951476)})}), enabledBorder: new input_border.OutlineInputBorder.new({borderRadius: new border_radius.BorderRadius.all(new ui.Radius.circular(4.0)), borderSide: new borders.BorderSide.new({width: 1.0, color: colors.Colors.white70})}), border: new input_border.OutlineInputBorder.new({borderRadius: new border_radius.BorderRadius.all(new ui.Radius.circular(4.0)), borderSide: new borders.BorderSide.new({width: 1.0, color: colors.Colors.white70})})}), dividerColor: new ui.Color.new(4281742902), errorColor: colors.Colors.orange, cardColor: new ui.Color.new(4280822315), splashColor: colors.Colors.white.withAlpha(100), floatingActionButtonTheme: new floating_action_button_theme.FloatingActionButtonThemeData.new({backgroundColor: new ui.Color.new(4285951476), splashColor: colors.Colors.white.withAlpha(100), highlightElevation: 8.0, elevation: 4.0, focusColor: new ui.Color.new(4285951476), hoverColor: new ui.Color.new(4285951476), foregroundColor: colors.Colors.white}), accentColor: new ui.Color.new(4285951476), popupMenuTheme: new popup_menu_theme.PopupMenuThemeData.new({color: new ui.Color.new(4281811018), textStyle: dart.nullCheck(AppTheme.AppTheme.lightTextTheme.bodyText2).merge(new text_style.TextStyle.new({color: new ui.Color.new(4294967295)}))}), bottomAppBarTheme: new bottom_app_bar_theme.BottomAppBarTheme.new({color: new ui.Color.new(4284902264), elevation: 2.0}), tabBarTheme: new tab_bar_theme.TabBarTheme.new({unselectedLabelColor: new ui.Color.new(4290954956), labelColor: new ui.Color.new(4285951476), indicatorSize: tabs.TabBarIndicatorSize.label, indicator: new tab_indicator.UnderlineTabIndicator.new({borderSide: new borders.BorderSide.new({color: new ui.Color.new(4285951476), width: 2.0})})}), sliderTheme: new slider_theme.SliderThemeData.new({activeTrackColor: new ui.Color.new(4285951476), inactiveTrackColor: new ui.Color.new(4285951476).withAlpha(100), trackShape: new slider_theme.RoundedRectSliderTrackShape.new(), trackHeight: 4.0, thumbColor: new ui.Color.new(4285951476), thumbShape: new slider_theme.RoundSliderThumbShape.new({enabledThumbRadius: 10.0}), overlayShape: new slider_theme.RoundSliderOverlayShape.new({overlayRadius: 24.0}), tickMarkShape: new slider_theme.RoundSliderTickMarkShape.new(), inactiveTickMarkColor: new ui.Color.new(4294105059), valueIndicatorShape: new slider_theme.PaddleSliderValueIndicatorShape.new(), valueIndicatorTextStyle: new text_style.TextStyle.new({color: colors.Colors.white})}), cupertinoOverrideTheme: new theme.CupertinoThemeData.new()});
    },
    set darkTheme(_) {}
  }, false);
  var bgLayer1$ = dart.privateName(AppTheme, "CustomAppTheme.bgLayer1");
  var bgLayer2$ = dart.privateName(AppTheme, "CustomAppTheme.bgLayer2");
  var bgLayer3$ = dart.privateName(AppTheme, "CustomAppTheme.bgLayer3");
  var bgLayer4$ = dart.privateName(AppTheme, "CustomAppTheme.bgLayer4");
  var disabledColor$ = dart.privateName(AppTheme, "CustomAppTheme.disabledColor");
  var onDisabled$ = dart.privateName(AppTheme, "CustomAppTheme.onDisabled");
  var colorInfo$ = dart.privateName(AppTheme, "CustomAppTheme.colorInfo");
  var colorWarning$ = dart.privateName(AppTheme, "CustomAppTheme.colorWarning");
  var colorSuccess$ = dart.privateName(AppTheme, "CustomAppTheme.colorSuccess");
  var colorError$ = dart.privateName(AppTheme, "CustomAppTheme.colorError");
  var shadowColor$ = dart.privateName(AppTheme, "CustomAppTheme.shadowColor");
  var onInfo$ = dart.privateName(AppTheme, "CustomAppTheme.onInfo");
  var onWarning$ = dart.privateName(AppTheme, "CustomAppTheme.onWarning");
  var onSuccess$ = dart.privateName(AppTheme, "CustomAppTheme.onSuccess");
  var onError$ = dart.privateName(AppTheme, "CustomAppTheme.onError");
  var lightBlack$ = dart.privateName(AppTheme, "CustomAppTheme.lightBlack");
  var red$ = dart.privateName(AppTheme, "CustomAppTheme.red");
  var green$ = dart.privateName(AppTheme, "CustomAppTheme.green");
  var yellow$ = dart.privateName(AppTheme, "CustomAppTheme.yellow");
  var orange$ = dart.privateName(AppTheme, "CustomAppTheme.orange");
  var blue$ = dart.privateName(AppTheme, "CustomAppTheme.blue");
  var purple$ = dart.privateName(AppTheme, "CustomAppTheme.purple");
  var pink$ = dart.privateName(AppTheme, "CustomAppTheme.pink");
  var brown$ = dart.privateName(AppTheme, "CustomAppTheme.brown");
  var violet$ = dart.privateName(AppTheme, "CustomAppTheme.violet");
  var indigo$ = dart.privateName(AppTheme, "CustomAppTheme.indigo");
  var Color_value = dart.privateName(ui, "Color.value");
  AppTheme.CustomAppTheme = class CustomAppTheme extends core.Object {
    get bgLayer1() {
      return this[bgLayer1$];
    }
    set bgLayer1(value) {
      super.bgLayer1 = value;
    }
    get bgLayer2() {
      return this[bgLayer2$];
    }
    set bgLayer2(value) {
      super.bgLayer2 = value;
    }
    get bgLayer3() {
      return this[bgLayer3$];
    }
    set bgLayer3(value) {
      super.bgLayer3 = value;
    }
    get bgLayer4() {
      return this[bgLayer4$];
    }
    set bgLayer4(value) {
      super.bgLayer4 = value;
    }
    get disabledColor() {
      return this[disabledColor$];
    }
    set disabledColor(value) {
      super.disabledColor = value;
    }
    get onDisabled() {
      return this[onDisabled$];
    }
    set onDisabled(value) {
      super.onDisabled = value;
    }
    get colorInfo() {
      return this[colorInfo$];
    }
    set colorInfo(value) {
      super.colorInfo = value;
    }
    get colorWarning() {
      return this[colorWarning$];
    }
    set colorWarning(value) {
      super.colorWarning = value;
    }
    get colorSuccess() {
      return this[colorSuccess$];
    }
    set colorSuccess(value) {
      super.colorSuccess = value;
    }
    get colorError() {
      return this[colorError$];
    }
    set colorError(value) {
      super.colorError = value;
    }
    get shadowColor() {
      return this[shadowColor$];
    }
    set shadowColor(value) {
      super.shadowColor = value;
    }
    get onInfo() {
      return this[onInfo$];
    }
    set onInfo(value) {
      super.onInfo = value;
    }
    get onWarning() {
      return this[onWarning$];
    }
    set onWarning(value) {
      super.onWarning = value;
    }
    get onSuccess() {
      return this[onSuccess$];
    }
    set onSuccess(value) {
      super.onSuccess = value;
    }
    get onError() {
      return this[onError$];
    }
    set onError(value) {
      super.onError = value;
    }
    get lightBlack() {
      return this[lightBlack$];
    }
    set lightBlack(value) {
      super.lightBlack = value;
    }
    get red() {
      return this[red$];
    }
    set red(value) {
      super.red = value;
    }
    get green() {
      return this[green$];
    }
    set green(value) {
      super.green = value;
    }
    get yellow() {
      return this[yellow$];
    }
    set yellow(value) {
      super.yellow = value;
    }
    get orange() {
      return this[orange$];
    }
    set orange(value) {
      super.orange = value;
    }
    get blue() {
      return this[blue$];
    }
    set blue(value) {
      super.blue = value;
    }
    get purple() {
      return this[purple$];
    }
    set purple(value) {
      super.purple = value;
    }
    get pink() {
      return this[pink$];
    }
    set pink(value) {
      super.pink = value;
    }
    get brown() {
      return this[brown$];
    }
    set brown(value) {
      super.brown = value;
    }
    get violet() {
      return this[violet$];
    }
    set violet(value) {
      super.violet = value;
    }
    get indigo() {
      return this[indigo$];
    }
    set indigo(value) {
      super.indigo = value;
    }
  };
  (AppTheme.CustomAppTheme.new = function(opts) {
    let bgLayer1 = opts && 'bgLayer1' in opts ? opts.bgLayer1 : C[1] || CT.C1;
    let bgLayer2 = opts && 'bgLayer2' in opts ? opts.bgLayer2 : C[2] || CT.C2;
    let bgLayer3 = opts && 'bgLayer3' in opts ? opts.bgLayer3 : C[3] || CT.C3;
    let bgLayer4 = opts && 'bgLayer4' in opts ? opts.bgLayer4 : C[4] || CT.C4;
    let disabledColor = opts && 'disabledColor' in opts ? opts.disabledColor : C[5] || CT.C5;
    let onDisabled = opts && 'onDisabled' in opts ? opts.onDisabled : C[1] || CT.C1;
    let colorWarning = opts && 'colorWarning' in opts ? opts.colorWarning : C[6] || CT.C6;
    let colorInfo = opts && 'colorInfo' in opts ? opts.colorInfo : C[7] || CT.C7;
    let colorSuccess = opts && 'colorSuccess' in opts ? opts.colorSuccess : C[8] || CT.C8;
    let shadowColor = opts && 'shadowColor' in opts ? opts.shadowColor : C[9] || CT.C9;
    let onInfo = opts && 'onInfo' in opts ? opts.onInfo : C[1] || CT.C1;
    let onWarning = opts && 'onWarning' in opts ? opts.onWarning : C[1] || CT.C1;
    let onSuccess = opts && 'onSuccess' in opts ? opts.onSuccess : C[1] || CT.C1;
    let colorError = opts && 'colorError' in opts ? opts.colorError : C[10] || CT.C10;
    let onError = opts && 'onError' in opts ? opts.onError : C[1] || CT.C1;
    let lightBlack = opts && 'lightBlack' in opts ? opts.lightBlack : C[11] || CT.C11;
    let red = opts && 'red' in opts ? opts.red : C[10] || CT.C10;
    let green = opts && 'green' in opts ? opts.green : C[8] || CT.C8;
    let yellow = opts && 'yellow' in opts ? opts.yellow : C[12] || CT.C12;
    let orange = opts && 'orange' in opts ? opts.orange : C[6] || CT.C6;
    let blue = opts && 'blue' in opts ? opts.blue : C[7] || CT.C7;
    let purple = opts && 'purple' in opts ? opts.purple : C[13] || CT.C13;
    let pink = opts && 'pink' in opts ? opts.pink : C[10] || CT.C10;
    let brown = opts && 'brown' in opts ? opts.brown : C[14] || CT.C14;
    let indigo = opts && 'indigo' in opts ? opts.indigo : C[7] || CT.C7;
    let violet = opts && 'violet' in opts ? opts.violet : C[13] || CT.C13;
    this[bgLayer1$] = bgLayer1;
    this[bgLayer2$] = bgLayer2;
    this[bgLayer3$] = bgLayer3;
    this[bgLayer4$] = bgLayer4;
    this[disabledColor$] = disabledColor;
    this[onDisabled$] = onDisabled;
    this[colorWarning$] = colorWarning;
    this[colorInfo$] = colorInfo;
    this[colorSuccess$] = colorSuccess;
    this[shadowColor$] = shadowColor;
    this[onInfo$] = onInfo;
    this[onWarning$] = onWarning;
    this[onSuccess$] = onSuccess;
    this[colorError$] = colorError;
    this[onError$] = onError;
    this[lightBlack$] = lightBlack;
    this[red$] = red;
    this[green$] = green;
    this[yellow$] = yellow;
    this[orange$] = orange;
    this[blue$] = blue;
    this[purple$] = purple;
    this[pink$] = pink;
    this[brown$] = brown;
    this[indigo$] = indigo;
    this[violet$] = violet;
    ;
  }).prototype = AppTheme.CustomAppTheme.prototype;
  dart.addTypeTests(AppTheme.CustomAppTheme);
  dart.addTypeCaches(AppTheme.CustomAppTheme);
  dart.setLibraryUri(AppTheme.CustomAppTheme, I[0]);
  dart.setFieldSignature(AppTheme.CustomAppTheme, () => ({
    __proto__: dart.getFields(AppTheme.CustomAppTheme.__proto__),
    bgLayer1: dart.finalFieldType(ui.Color),
    bgLayer2: dart.finalFieldType(ui.Color),
    bgLayer3: dart.finalFieldType(ui.Color),
    bgLayer4: dart.finalFieldType(ui.Color),
    disabledColor: dart.finalFieldType(ui.Color),
    onDisabled: dart.finalFieldType(ui.Color),
    colorInfo: dart.finalFieldType(ui.Color),
    colorWarning: dart.finalFieldType(ui.Color),
    colorSuccess: dart.finalFieldType(ui.Color),
    colorError: dart.finalFieldType(ui.Color),
    shadowColor: dart.finalFieldType(ui.Color),
    onInfo: dart.finalFieldType(ui.Color),
    onWarning: dart.finalFieldType(ui.Color),
    onSuccess: dart.finalFieldType(ui.Color),
    onError: dart.finalFieldType(ui.Color),
    lightBlack: dart.finalFieldType(ui.Color),
    red: dart.finalFieldType(ui.Color),
    green: dart.finalFieldType(ui.Color),
    yellow: dart.finalFieldType(ui.Color),
    orange: dart.finalFieldType(ui.Color),
    blue: dart.finalFieldType(ui.Color),
    purple: dart.finalFieldType(ui.Color),
    pink: dart.finalFieldType(ui.Color),
    brown: dart.finalFieldType(ui.Color),
    violet: dart.finalFieldType(ui.Color),
    indigo: dart.finalFieldType(ui.Color)
  }));
  dart.defineLazy(AppTheme.CustomAppTheme, {
    /*AppTheme.CustomAppTheme.lightCustomAppTheme*/get lightCustomAppTheme() {
      return new AppTheme.CustomAppTheme.new({bgLayer1: new ui.Color.new(4294967295), bgLayer2: new ui.Color.new(4293322988), bgLayer3: new ui.Color.new(4292533729), bgLayer4: new ui.Color.new(4290954956), disabledColor: new ui.Color.new(4284703587), onDisabled: new ui.Color.new(4294967295), colorInfo: new ui.Color.new(4283796216), colorWarning: new ui.Color.new(4294940996), colorSuccess: new ui.Color.new(4281907076), shadowColor: new ui.Color.new(4292467161), onInfo: new ui.Color.new(4294967295), onSuccess: new ui.Color.new(4294967295), onWarning: new ui.Color.new(4294967295), colorError: new ui.Color.new(4291776636), onError: new ui.Color.new(4294967295)});
    },
    /*AppTheme.CustomAppTheme.darkCustomAppTheme*/get darkCustomAppTheme() {
      return new AppTheme.CustomAppTheme.new({bgLayer1: new ui.Color.new(4280362025), bgLayer2: new ui.Color.new(4280822064), bgLayer3: new ui.Color.new(4281348408), bgLayer4: new ui.Color.new(4281874754), disabledColor: new ui.Color.new(4290427578), onDisabled: new ui.Color.new(4278190080), colorInfo: new ui.Color.new(4283796216), colorWarning: new ui.Color.new(4294940996), colorSuccess: new ui.Color.new(4281907076), shadowColor: new ui.Color.new(4280295456), onInfo: new ui.Color.new(4294967295), onSuccess: new ui.Color.new(4294967295), onWarning: new ui.Color.new(4294967295), colorError: new ui.Color.new(4291776636), onError: new ui.Color.new(4294967295)});
    }
  }, false);
  var backgroundColor = dart.privateName(AppTheme, "NavigationBarTheme.backgroundColor");
  var selectedItemIconColor = dart.privateName(AppTheme, "NavigationBarTheme.selectedItemIconColor");
  var selectedItemTextColor = dart.privateName(AppTheme, "NavigationBarTheme.selectedItemTextColor");
  var selectedItemColor = dart.privateName(AppTheme, "NavigationBarTheme.selectedItemColor");
  var selectedOverlayColor = dart.privateName(AppTheme, "NavigationBarTheme.selectedOverlayColor");
  var unselectedItemIconColor = dart.privateName(AppTheme, "NavigationBarTheme.unselectedItemIconColor");
  var unselectedItemTextColor = dart.privateName(AppTheme, "NavigationBarTheme.unselectedItemTextColor");
  var unselectedItemColor = dart.privateName(AppTheme, "NavigationBarTheme.unselectedItemColor");
  AppTheme.NavigationBarTheme = class NavigationBarTheme extends core.Object {
    get backgroundColor() {
      return this[backgroundColor];
    }
    set backgroundColor(value) {
      this[backgroundColor] = value;
    }
    get selectedItemIconColor() {
      return this[selectedItemIconColor];
    }
    set selectedItemIconColor(value) {
      this[selectedItemIconColor] = value;
    }
    get selectedItemTextColor() {
      return this[selectedItemTextColor];
    }
    set selectedItemTextColor(value) {
      this[selectedItemTextColor] = value;
    }
    get selectedItemColor() {
      return this[selectedItemColor];
    }
    set selectedItemColor(value) {
      this[selectedItemColor] = value;
    }
    get selectedOverlayColor() {
      return this[selectedOverlayColor];
    }
    set selectedOverlayColor(value) {
      this[selectedOverlayColor] = value;
    }
    get unselectedItemIconColor() {
      return this[unselectedItemIconColor];
    }
    set unselectedItemIconColor(value) {
      this[unselectedItemIconColor] = value;
    }
    get unselectedItemTextColor() {
      return this[unselectedItemTextColor];
    }
    set unselectedItemTextColor(value) {
      this[unselectedItemTextColor] = value;
    }
    get unselectedItemColor() {
      return this[unselectedItemColor];
    }
    set unselectedItemColor(value) {
      this[unselectedItemColor] = value;
    }
  };
  (AppTheme.NavigationBarTheme.new = function() {
    this[backgroundColor] = null;
    this[selectedItemIconColor] = null;
    this[selectedItemTextColor] = null;
    this[selectedItemColor] = null;
    this[selectedOverlayColor] = null;
    this[unselectedItemIconColor] = null;
    this[unselectedItemTextColor] = null;
    this[unselectedItemColor] = null;
    ;
  }).prototype = AppTheme.NavigationBarTheme.prototype;
  dart.addTypeTests(AppTheme.NavigationBarTheme);
  dart.addTypeCaches(AppTheme.NavigationBarTheme);
  dart.setLibraryUri(AppTheme.NavigationBarTheme, I[0]);
  dart.setFieldSignature(AppTheme.NavigationBarTheme, () => ({
    __proto__: dart.getFields(AppTheme.NavigationBarTheme.__proto__),
    backgroundColor: dart.fieldType(dart.nullable(ui.Color)),
    selectedItemIconColor: dart.fieldType(dart.nullable(ui.Color)),
    selectedItemTextColor: dart.fieldType(dart.nullable(ui.Color)),
    selectedItemColor: dart.fieldType(dart.nullable(ui.Color)),
    selectedOverlayColor: dart.fieldType(dart.nullable(ui.Color)),
    unselectedItemIconColor: dart.fieldType(dart.nullable(ui.Color)),
    unselectedItemTextColor: dart.fieldType(dart.nullable(ui.Color)),
    unselectedItemColor: dart.fieldType(dart.nullable(ui.Color))
  }));
  var _changeTheme = dart.privateName(AppThemeNotifier, "_changeTheme");
  AppThemeNotifier.AppThemeNotifier = class AppThemeNotifier$ extends change_notifier.ChangeNotifier {
    init() {
      return async.async(dart.dynamic, (function* init() {
        let sharedPreferences = (yield shared_preferences.SharedPreferences.getInstance());
        let data = sharedPreferences.getInt("themeMode");
        if (data == null) {
          AppThemeNotifier.AppThemeNotifier._themeMode = 1;
          AppThemeNotifier.AppThemeNotifier.theme = 1;
        } else {
          AppThemeNotifier.AppThemeNotifier._themeMode = data;
          AppThemeNotifier.AppThemeNotifier.theme = data;
        }
        this[_changeTheme](AppThemeNotifier.AppThemeNotifier._themeMode);
        this.notifyListeners();
      }).bind(this));
    }
    themeMode() {
      return AppThemeNotifier.AppThemeNotifier._themeMode;
    }
    updateTheme(themeMode) {
      return async.async(dart.void, (function* updateTheme() {
        AppThemeNotifier.AppThemeNotifier._themeMode = themeMode;
        AppThemeNotifier.AppThemeNotifier.theme = themeMode;
        this[_changeTheme](themeMode);
        this.notifyListeners();
        let sharedPreferences = (yield shared_preferences.SharedPreferences.getInstance());
        sharedPreferences.setInt("themeMode", themeMode);
      }).bind(this));
    }
    [_changeTheme](themeMode) {
      AppTheme.AppTheme.customTheme = AppTheme.AppTheme.getCustomAppTheme(themeMode);
      AppTheme.AppTheme.theme = AppTheme.AppTheme.getThemeFromThemeMode(themeMode);
      if (themeMode === 1) {
        app_theme.FxAppTheme.changeThemeType(app_theme.FxAppThemeType.light);
        custom_theme.FxCustomTheme.changeThemeType(custom_theme.FxCustomThemeType.light);
      } else if (themeMode === 2) {
        app_theme.FxAppTheme.changeThemeType(app_theme.FxAppThemeType.dark);
        custom_theme.FxCustomTheme.changeThemeType(custom_theme.FxCustomThemeType.dark);
      }
    }
  };
  (AppThemeNotifier.AppThemeNotifier.new = function() {
    AppThemeNotifier.AppThemeNotifier.__proto__.new.call(this);
    this.init();
  }).prototype = AppThemeNotifier.AppThemeNotifier.prototype;
  dart.addTypeTests(AppThemeNotifier.AppThemeNotifier);
  dart.addTypeCaches(AppThemeNotifier.AppThemeNotifier);
  dart.setMethodSignature(AppThemeNotifier.AppThemeNotifier, () => ({
    __proto__: dart.getMethods(AppThemeNotifier.AppThemeNotifier.__proto__),
    init: dart.fnType(dart.dynamic, []),
    themeMode: dart.fnType(dart.dynamic, []),
    updateTheme: dart.fnType(async.Future$(dart.void), [core.int]),
    [_changeTheme]: dart.fnType(dart.dynamic, [core.int])
  }));
  dart.setLibraryUri(AppThemeNotifier.AppThemeNotifier, I[1]);
  dart.defineLazy(AppThemeNotifier.AppThemeNotifier, {
    /*AppThemeNotifier.AppThemeNotifier._themeMode*/get _themeMode() {
      return 1;
    },
    set _themeMode(_) {},
    /*AppThemeNotifier.AppThemeNotifier.theme*/get theme() {
      return 1;
    },
    set theme(_) {}
  }, false);
  dart.trackLibraries("packages/pupl_app/AppTheme.dart", {
    "package:pupl_app/AppTheme.dart": AppTheme,
    "package:pupl_app/AppThemeNotifier.dart": AppThemeNotifier
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["AppTheme.dart","AppThemeNotifier.dart"],"names":[],"mappings":"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GhC,uDAAyB,iBAAM,wBAAwB,oBAC9C,yDACW,iBAAM,yBAChB,iBAAM,4BACiB,2CACxB,yDACG,mCAAkB,iBAAM,oBAAoB,wBAG/C,wDACO,iBAAM,iCACJ,AAAkB,iBAAZ,sBAAsB,kBACpC,iEACC,iBACD,iBAAM,yBACN,gEAA0C,sBACxC,6DAAuC,uBACtC,wEACQ,iBAAM,kCACR,iFACI,qCACT,iDAGM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IA6BhB;;;;;;IACR;;;;;;IACA;;;;;;IACA;;;;;;IACA;;;;;;IACA;;;;;;IACA;;;;;;IACA;;;;;;IACA;;;;;;IACA;;;;;;IACA;;;;;;IACA;;;;;;IACA;;;;;;IACA;;;;;;IACA;;;;;;IAEQ;;;;;;IACR;;;;;;IACA;;;;;;IACA;;;;;;IACA;;;;;;IACA;;;;;;IACA;;;;;;IACA;;;;;;IACA;;;;;;IACA;;;;;;IACA;;;;;;;;QAGG;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QAGA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;IA3BA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAGA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;EACL;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAI0B,2CAAmB;YAAG,4CACtC,iBAAM,uBACN,iBAAM,uBACN,iBAAM,uBACN,iBAAM,4BACD,iBAAM,yBACT,iBAAM,wBACP,iBAAM,2BACH,iBAAM,2BACN,iBAAM,0BACP,iBAAM,qBACX,iBAAM,wBACH,iBAAM,wBACN,iBAAM,yBACL,iBAAM,sBACT,iBAAM;;MAGW,0CAAkB;YAAG,4CACnC,iBAAM,uBACN,iBAAM,uBACN,iBAAM,uBACN,iBAAM,4BACD,iBAAM,yBACT,iBAAM,wBACP,iBAAM,2BACH,iBAAM,2BACN,iBAAM,0BACP,iBAAM,qBACX,iBAAM,wBACH,iBAAM,wBACN,iBAAM,yBACL,iBAAM,sBACT,iBAAM;;;;;;;;;;;;IAIZ;;;;;;IACH;;;;;;IACA;;;;;;IACA;;;;;;IACA;;;;;;IACA;;;;;;IACA;;;;;;IACA;;;;;;;;IAPG;IACH;IACA;IACA;IACA;IACA;IACA;IACA;;EACN;;;;;;;;;;;;;;;;;;ACrgBM;AACgB,iCAAoB,MAAwB;AACzD,mBAAO,AAAkB,iBAAD,QAAQ;AACrC,YAAI,AAAK,IAAD;AACQ,UAAd,+CAAa;AACJ,UAAT,0CAAQ;;AAES,UAAjB,+CAAa,IAAI;AACL,UAAZ,0CAAQ,IAAI;;AAGU,QAAxB,mBAAa;AACI,QAAjB;MACF;;;AAEe;IAAU;gBAEI;AAAL;AACiB,QAAtB,+CAAa,SAAS;AACL,QAAjB,0CAAQ,SAAS;AAEX,QAAvB,mBAAa,SAAS;AAEL,QAAjB;AAEkB,iCAAoB,MAAwB;AACd,QAAhD,AAAkB,iBAAD,QAAQ,aAAa,SAAS;MACjD;;mBAEiB;AAC6C,MAAnD,gCAAuB,oCAAkB,SAAS;AACD,MAAjD,0BAAiB,wCAAsB,SAAS;AAEzD,UAAI,AAAU,SAAD,KAAI;AACiC,QAArC,qCAA+B;AACY,QAAxC,2CAAkC;YAC3C,KAAI,AAAU,SAAD,KAAI;AACyB,QAApC,qCAA+B;AACW,QAAvC,2CAAkC;;IAEpD;;;AA5CA;AACQ,IAAN;EACF;;;;;;;;;;;;MALW,4CAAU;YAAG;;;MACb,uCAAK;YAAG","file":"../../../../../../packages/pupl_app/AppTheme.dart.lib.js"}');
  // Exports:
  return {
    AppTheme: AppTheme,
    AppThemeNotifier: AppThemeNotifier
  };
}));

//# sourceMappingURL=AppTheme.dart.lib.js.map
